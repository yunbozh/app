// Code generated by protoc-gen-go. DO NOT EDIT.
// source: s2s/s2s_msg_id.proto

package s2s

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MsgID int32

const (
	MsgID_MSGID_S2S_UNSPECIFIED MsgID = 0
	MsgID_MSGID_S2S_REQ_ENTER   MsgID = 1
	MsgID_MSGID_S2S_REP_ENTER   MsgID = 2
)

var MsgID_name = map[int32]string{
	0: "MSGID_S2S_UNSPECIFIED",
	1: "MSGID_S2S_REQ_ENTER",
	2: "MSGID_S2S_REP_ENTER",
}

var MsgID_value = map[string]int32{
	"MSGID_S2S_UNSPECIFIED": 0,
	"MSGID_S2S_REQ_ENTER":   1,
	"MSGID_S2S_REP_ENTER":   2,
}

func (x MsgID) Enum() *MsgID {
	p := new(MsgID)
	*p = x
	return p
}

func (x MsgID) String() string {
	return proto.EnumName(MsgID_name, int32(x))
}

func (x *MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MsgID_value, data, "MsgID")
	if err != nil {
		return err
	}
	*x = MsgID(value)
	return nil
}

func (MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_455153df3d38ba98, []int{0}
}

func init() {
	proto.RegisterEnum("s2s.MsgID", MsgID_name, MsgID_value)
}

func init() { proto.RegisterFile("s2s/s2s_msg_id.proto", fileDescriptor_455153df3d38ba98) }

var fileDescriptor_455153df3d38ba98 = []byte{
	// 110 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x36, 0x2a, 0xd6,
	0x2f, 0x36, 0x2a, 0x8e, 0xcf, 0x2d, 0x4e, 0x8f, 0xcf, 0x4c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0x62, 0x2e, 0x36, 0x2a, 0xd6, 0x0a, 0xe1, 0x62, 0xf5, 0x2d, 0x4e, 0xf7, 0x74, 0x11, 0x92,
	0xe4, 0x12, 0xf5, 0x0d, 0x76, 0xf7, 0x74, 0x89, 0x0f, 0x36, 0x0a, 0x8e, 0x0f, 0xf5, 0x0b, 0x0e,
	0x70, 0x75, 0xf6, 0x74, 0xf3, 0x74, 0x75, 0x11, 0x60, 0x10, 0x12, 0xe7, 0x12, 0x46, 0x48, 0x05,
	0xb9, 0x06, 0xc6, 0xbb, 0xfa, 0x85, 0xb8, 0x06, 0x09, 0x30, 0xa2, 0x4b, 0x04, 0x40, 0x25, 0x98,
	0x00, 0x01, 0x00, 0x00, 0xff, 0xff, 0x70, 0x41, 0x82, 0x05, 0x71, 0x00, 0x00, 0x00,
}
